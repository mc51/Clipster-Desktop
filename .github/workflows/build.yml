name: Test-Build-Windows

on:
  push:
    tags:
      - 'test*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build packages
    # needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [windows-latest]
        include:
          - os: windows-latest
            TARGET: windows
            CMD_PRE_BUILD: |
              export PATH='C:/msys64/mingw64/bin':$PATH
              export PKG_CONFIG_PATH='C:/msys64/mingw64/lib/pkgconfig'
              pacman -S --needed --noconfirm mingw-w64-x86_64-gtk3 mingw-w64-x86_64-toolchain base-devel glib2-devel
              sed -i -e 's/-Wl,-luuid/-luuid/g' /mingw64/lib/pkgconfig/gdk-3.0.pc
              ls -lah /mingw64/include
              ls -lah 'C:/msys64/mingw64/lib/'
              which pkg-config
              pkg-config --cflags gio-2.0
            CMD_BUILD: |
              # export CGO_CFLAGS="-I/mingw64/include/glib-2.0"
              go mod tidy -compat="1.17"
              go build -x -v -o build/clipster_win.exe -ldflags "-H=windowsgui -s -w" .
              cd build && powershell Compress-Archive clipster_win.exe clipster_win.zip
            OUT_FILE_NAME: clipster_win.zip
            ASSET_MIME: application/zip
    steps:
    - uses: s-weigand/setup-conda@v1
      with:
        activate-conda: false
        update-conda: true
        conda-channels: conda-forge
      if: runner.os == 'macOS'
    - name: Resolve dependencies for ${{matrix.TARGET}}
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: ${{matrix.CMD_RESOLVE_DEPS}}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: switch git-bash shell to msys2 shell by adding msys2 path to PATH front
      run: |
        echo "C:\msys64\usr\bin" >> $GITHUB_PATH
      shell: bash
      if: runner.os == 'Windows'
    - name: Pre build for ${{matrix.TARGET}}
      run: ${{matrix.CMD_PRE_BUILD}}
      if: runner.os == 'Windows'
      shell: bash
    - name: Build Go for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
      shell: bash
