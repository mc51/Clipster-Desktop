name: Test-Build-Windows

on:
  push:
    tags:
      - 'test*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build packages
    # needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [windows-latest]
        include:
          - os: windows-latest
            TARGET: windows
            CMD_PRE_BUILD: |
              echo 'export PATH=/c/msys64/usr/bin:$PATH' >> ~/.bashrc
              source ~/.bashrc
              pacman -S mingw-w64-x86_64-gtk3 mingw-w64-x86_64-toolchain base-devel glib2-devel
              sed -i -e 's/-Wl,-luuid/-luuid/g' /mingw64/lib/pkgconfig/gdk-3.0.pc
            CMD_BUILD: go mod tidy && go build -o build/clipster_win.exe -ldflags "-H=windowsgui -s -w" . && cd build && powershell Compress-Archive clipster_win.exe clipster_win.zip
            OUT_FILE_NAME: clipster_win.zip
            ASSET_MIME: application/zip  # application/vnd.microsoft.portable-executable
    steps:
    - uses: s-weigand/setup-conda@v1
      with:
        activate-conda: false
        update-conda: true
        conda-channels: conda-forge
      if: runner.os == 'macOS'
    - name: Resolve dependencies for ${{matrix.TARGET}}
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: ${{matrix.CMD_RESOLVE_DEPS}}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Pre build for ${{matrix.TARGET}}
      run: ${{matrix.CMD_PRE_BUILD}}
      if: runner.os == 'Windows'
      shell: bash
    - name: Build Go for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Post build for ${{matrix.TARGET}}
      run: ${{matrix.CMD_POST_BUILD}}
      if: runner.os == 'macOS'
