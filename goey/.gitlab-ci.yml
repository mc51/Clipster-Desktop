before_script: &before_script_all
  - cat /etc/*-release
  - if [ -x "$(command -v go)" ]; then go version; fi;
  - if [ -n "$APT_GET" ]; then apt-get update -qq -y; apt-get install -qq -y $APT_GET; fi;
  - if [ -n "$DISPLAY" ]; then Xvfb $DISPLAY -screen 0 1024x768x24 & fi;

golang-1.14:
  image: golang:1.14
  stage: build
  variables:
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go build . ./example/...
    - go test ./base ./loop ./dialog .

golang-1.13:
  image: golang:1.13
  stage: build
  variables:
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go build . ./example/...
    - go test ./base ./loop ./dialog .

golang-1.12:
  image: golang:1.12
  stage: build
  variables:
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go build . ./example/...
    - go test ./base ./loop ./dialog .

golang-1.11:
  image: golang:1.11
  stage: build
  variables:
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go build . ./example/...
    - go test ./base ./loop ./dialog .

golang-1.10:
  image: golang:1.10
  stage: build
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go get clipster/goey clipster/goey/example/...
    - go build clipster/goey clipster/goey/example/...
    - go test ./base ./loop ./dialog .

golang-1.9:
  image: golang:1.9
  stage: build
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go get clipster/goey clipster/goey/example/...
    - go build clipster/goey clipster/goey/example/...
    - go test ./base ./loop ./dialog .

golang-1.8:
  image: golang:1.8
  stage: build
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
  script:
    - go get clipster/goey clipster/goey/example/...
    - go build clipster/goey clipster/goey/example/...
    - go test ./base ./loop ./dialog .

test:
  image: golang:1.12
  stage: test
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "libgtk-3-dev xvfb"
    SCREENSHOTS: "onebutton twofields decoration colour"
  before_script:
    - *before_script_all
    - mkdir -p .cache/github.com
    - mv .cache/github.com $GOPATH/src/
  after_script:
    - mv $GOPATH/src/github.com .cache/
  script:
    - go get clipster/goey clipster/goey/example/...
    - go test -coverprofile=cover.out -v ./base ./loop ./dialog .
    - go tool cover -html=cover.out -o=cover.html
    - go test -v -race ./loop 
    - go vet -composites=false ./base ./loop ./dialog .
    - go get -u github.com/gordonklaus/ineffassign
    - go install github.com/gordonklaus/ineffassign
    - $GOPATH/bin/ineffassign .
    - go get -u github.com/client9/misspell/cmd/misspell
    - go install github.com/client9/misspell/cmd/misspell
    - $GOPATH/bin/misspell -locale US *.go *.md base/*.go loop/*.go dialog/*.go
    - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GOPATH/bin v2.2.0
    - $GOPATH/bin/gosec -exclude-dir=internal -exclude=G104,G204,G304 ./...
    - mkdir ./images
    - for elem in $SCREENSHOTS; do go build -v clipster/goey/example/$elem; done
    - for elem in $SCREENSHOTS; do GOEY_SCREENSHOT=./images/${elem}_linux.png ./$elem; done
  cache:
    key: test
    paths:
      - .cache/github.com/
  except:
    - tags
  artifacts:
    paths:
      - cover.html
      - images/

test-windows:
  image: golang:1.12
  stage: test
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "wine64 wine-binfmt xvfb"
    GOOS: windows
  script:
    - go get clipster/goey clipster/goey/example/...
    - go build clipster/goey clipster/goey/example/...
    - go test -c -coverprofile=cover.out ./base
    - wine64 ./base.test.exe -test.coverprofile=cover.out -test.v
    - go test -c -coverprofile=cover.out ./loop
    - wine64 ./loop.test.exe -test.coverprofile=cover.out -test.v
    - go test -c -coverprofile=cover.out .
    - wine64 ./goey.test.exe -test.coverprofile=cover.out -test.v -test.short
    - go tool cover -html=cover.out -o=cover.html
  except:
    - tags
  artifacts:
    paths:
      - cover.html

test-cocoa:
  image: golang:1.12
  stage: test
  variables:
    GOPATH: $CI_BUILDS_DIR
    GIT_CLONE_PATH: $CI_BUILDS_DIR/src/clipster/goey
    DISPLAY: ":1"
    APT_GET: "gnustep-devel xvfb fluxbox"
  script:
    - go get -tags cocoa clipster/goey clipster/goey/example/...
    - fluxbox 2> nul &
    - go test -tags cocoa -coverprofile=cover.out -v ./base ./loop .
    - go tool cover -html=cover.out -o=cover.html
    - go test -tags cocoa -v -race ./loop 
  except:
    - tags
  artifacts:
    paths:
      - cover.html

lint:
  image: golang:1.14
  stage: test
  script:
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- v1.23.6
    - ./bin/golangci-lint run -v --enable-all --disable wsl .
  except:
    - tags
  allow_failure: true

pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir ./public
    - mv cover.html ./public
    - mv images/*.png ./public
  only:
    - master
  artifacts:
    paths:
      - public

